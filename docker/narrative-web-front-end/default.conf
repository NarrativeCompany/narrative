server {
    listen       80;
    server_name  localhost;
    root         /usr/share/nginx/html;

    location /static {
      add_header X-Backend $hostname;
      # cache all static assets for 10 years. since static files all have hashes in the URL that should
      # change whenever file contents change.
      # helpful Cloudflare docs on origin cache control:
      # https://support.cloudflare.com/hc/en-us/articles/115003206852-Origin-Cache-Control
      # also mark these as immutable for further performance benefit. even if you do a refresh, the browser
      # won't go check the server (e.g. for a 304 / Not Modified). only a hard refresh or cache clear
      # will result in re-requesting the resource. more details:
      # https://bitsup.blogspot.com/2016/05/cache-control-immutable.html
      add_header 'Cache-Control' 'public, max-age=315360000, immutable';
      # disable ETag so that the cache-control header is the only directive as to how to cache these files.
      etag off;
    }

    location / {
      # if a static file is found, serve it. it will be served with an ETag header so that proper caching
      # and invalidation should occur. note that Cloudflare does not support strong ETags
      # unless you are on an Enterprise plan, so this isn't guaranteed to always work:
      # https://support.cloudflare.com/hc/en-us/articles/218505467-Does-Cloudflare-support-ETag-headers-
      # if the file is not found, fallback to index.html by default, which will have no caching below.
      try_files $uri @index;
      # for static files that are found, we don't want them to be cached on clients since they can change on the server
      # at any time. for these files, we want to require revalidation by the client. that's controlled by max-age=0.
      # s-maxage=315360000 tells Cloudflare that it can cache the file forever (10 years). this works since we
      # manually clear Cloudflare caches every time we do a new deployment. this gives the advantage of letting
      # Cloudflare served cached versions of the files without always needing to hit our origin server.
      add_header 'Cache-Control' 'public, max-age=0, s-maxage=315360000';
    }

    location @index {
        add_header X-Backend $hostname;
        # do not ever cache index.html on the client. there doesn't appear to be any way to get Cloudflare
        # to cache the default index.html since these requests will never have a file extension and Cloudflare
        # doesn't ever cache static HTML unless you set up a page rule for it:
        # https://support.cloudflare.com/hc/en-us/articles/200172516-Which-file-extensions-does-Cloudflare-cache-for-static-content-
        # technically, no-cache is probably unnecessary since no-store should supersede it, but including it anyway
        # to ensure intended operation in all browsers.
        add_header 'Cache-Control' 'no-store, no-cache';
        # disable ETag since we know we don't need it when we don't want any caching.
        etag off;
        expires off;
        proxy_no_cache 1;
        try_files $uri /index.html =404;
    }

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        add_header X-Backend $hostname;
    }

}
