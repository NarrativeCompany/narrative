# Servlet context parameters
server.servlet.context-parameters.alternateClusterDomains=
server.servlet.context-parameters.clusterCpDomain=localhost
server.servlet.context-parameters.directServletHeartbeatServerPort=9091
server.servlet.context-parameters.global.database=global
server.servlet.context-parameters.heartbeatServerPort=9090
server.servlet.context-parameters.internalClusterDomain=
server.servlet.context-parameters.localCacheMaxEntries=10000
server.servlet.context-parameters.localFileCachePath=
server.servlet.context-parameters.utility.database=utility
server.servlet.context-parameters.webSocketKeyStorePassword=
server.servlet.context-parameters.webSocketKeyStorePath=

# SendGrid email
server.servlet.context-parameters.smtpServer=smtp.sendgrid.net
server.servlet.context-parameters.smtpPort=587
server.servlet.context-parameters.smtpUseTls=true
# the username is the literal string "apikey"
server.servlet.context-parameters.smtpUsername=apikey
# password is the SendGrid API key, which should be set as a secret for each environment
#server.servlet.context-parameters.smtpPassword=

# JSP init parameters
server.servlet.jsp.init-parameters.compilerSourceVM=1.8
server.servlet.jsp.init-parameters.compilerTargetVM=1.8
server.servlet.jsp.init-parameters.enablePooling=false
server.servlet.jsp.init-parameters.fork=false
server.servlet.jsp.init-parameters.trimSpaces=true
server.servlet.jsp.init-parameters.xpoweredBy=false

# Jars to skip TLD scan
server.tomcat.additional-tld-skip-patterns=mchange-commons-java-0.2.11.jar,gdata-client-1.0.jar,gdata-contacts-meta-3.0.jar,gdata-core-1.0.jar,gdata-client-meta-1.0.jar,gdata-client-1.0.jar,gdata-client-1.0.jar,gdata-media-1.0.jar,gdata-youtube-meta-2.0.jar,xml-apis.jar,xercesImpl.jar,xml-apis.jar,serializer.jar,jaxb-api.jar,activation.jar,jsr173_1.0_api.jar,jaxb1-impl.jar,js.jar,unidataCommon-4.2.20.jar,jcip-annotations-1.0.jar,jcip-annotations-1.0.jar,gt-api-13.5.jar,gt-referencing-13.5.jar,vecmath-1.3.2.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jts-1.13.jar,jai_core-1.1.3.jar,jts-1.13.jar,gt-referencing-13.5.jar,vecmath-1.3.2.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jai_core-1.1.3.jar,vecmath-1.3.2.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jai_core-1.1.3.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,vecmath-1.3.2.jar,jai_core-1.1.3.jar,jsr-275-1.0-beta-2.jar,vecmath-1.3.2.jar,jai_core-1.1.3.jar,gdata-client-1.0.jar,gdata-contacts-meta-3.0.jar,gdata-core-1.0.jar,gdata-client-meta-1.0.jar,gdata-client-1.0.jar,gdata-client-1.0.jar,gdata-media-1.0.jar,gdata-youtube-meta-2.0.jar,xml-apis.jar,xercesImpl.jar,xml-apis.jar,serializer.jar,jaxb-api.jar,activation.jar,jsr173_1.0_api.jar,jaxb1-impl.jar,js.jar,unidataCommon-4.2.20.jar,jcip-annotations-1.0.jar,slf4j-api-1.6.1.jar,commons-httpclient-3.1.jar,commons-logging-1.0.4.jar,commons-codec-1.2.jar,jcip-annotations-1.0.jar,slf4j-api-1.6.1.jar,gt-api-13.5.jar,gt-referencing-13.5.jar,vecmath-1.3.2.jar,commons-pool-1.5.4.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jts-1.13.jar,jdom-1.1.3.jar,jai_core-1.1.3.jar,jts-1.13.jar,gt-referencing-13.5.jar,vecmath-1.3.2.jar,commons-pool-1.5.4.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jai_core-1.1.3.jar,vecmath-1.3.2.jar,commons-pool-1.5.4.jar,gt-metadata-13.5.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,jgridshift-1.0.jar,jai_core-1.1.3.jar,gt-opengis-13.5.jar,jsr-275-1.0-beta-2.jar,vecmath-1.3.2.jar,commons-pool-1.5.4.jar,jai_core-1.1.3.jar,jsr-275-1.0-beta-2.jar,vecmath-1.3.2.jar,commons-pool-1.5.4.jar,jai_core-1.1.3.jar

# bl: overriding this from spring-configuration-metadata.json so that we can show longer thread names (50 instead of 15 chars)
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%60.60t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

# bl: JarEntryRevision outputs 4 NPEs at startup when trying to load our 4 xml files:
# struts.xml, root-struts.xml, cluster-struts.xml
# these are all ignorable red herrings, but they can be confusing and misleading whenever you see them.
# initialization still works just fine. the JarEntryRevision is really only trying to load the file
# for purposes of live reloading, which is pointless when running as a packed WAR.
# see DefaultFileManager.loadFile(), which calls monitorFile where the NPE happens.
# to avoid the confusion and red herrings, let's limit that class to ERROR level logs only.
# i can't see any other way around this right now. note that the issue doesn't happen
# when running in exploded fashion in IntelliJ. refer #1440
logging.level.com.opensymphony.xwork2.util.fs.JarEntryRevision=ERROR

# Actuator enabled endpoints. The prometheus endpoint (/actuator/prometheus) provides Prometheus metrics and statistics (such as heap max, heap use, etc).
management.endpoints.web.exposure.include=info,health,prometheus

###############################
# Spring MVC configuration
##############################
# have spring throw an exception when no handler is found
spring.mvc.throwExceptionIfNoHandlerFound=true
# disable the ResourceHttpRequestHandler since we are using spring purely for REST; don't want to serve static resources.
spring.resources.add-mappings=false

# Set up Spring Boot/MVC REST root URI path
narrative.spring.mvc.base_uri=/api/
# Max page size for Pageable resolver
narrative.spring.mvc.max_page_size=200

# Message bundle locations
spring.messages.basename=narrative,narrative_niches,global,org/springframework/security/messages

###############################
# Spring Security
###############################
spring.security.filter.order=3

#################################################
# Redisson client config
#################################################
redisson.client.database-number=0
redisson.client.codec-name=org.redisson.codec.FstCodec
# Use new Redisson Hibernate API when false
narrative.hibernateCacheConfig.useHibernateRedisson=false

#################################################
# Spring Session (Redis)
#################################################
spring.session.store-type=redis
# database 0 is used by Redisson for caching, so use database 1 for Redis sessions
spring.redis.database=1
# order 3 puts the session filter after NetworkFilter, but before GStrutsPrepareAndExecuteFilter, which is where it fits best.
spring.session.servlet.filter-order=3
server.servlet.session.timeout=60m
# on_save is the default
#spring.session.redis.flush-mode=on_save
spring.session.redis.namespace=narrative:session
# run the cleanup once an hour instead of the default of once a minute
spring.session.redis.cleanup-cron=0 0 * * * *
#spring.session.servlet.filter-order=-2147483598 # Session repository filter order.
#spring.session.servlet.filter-dispatcher-types=async,error,request # Session repository filter dispatcher types.

spring.session.redis.pretty-print-json=false
