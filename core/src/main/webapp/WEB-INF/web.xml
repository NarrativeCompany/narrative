<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1"
         metadata-complete="true">


    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- bl: shouldn't need this.  all exceptions should be handled via Struts automatically.
         if an exception makes its way up to Tomcat, then we've got bigger problems to solve,
         at which point the default tomcat exception will have to do. 
         
         todo: shouldn't we have at least a basic exception page (e.g. our current unused exception.jsp)
               to prevent us from ever displaying the ugly tomcat error message (and stack trace)? -->
    <!-- bl: changing my mind.  i think we need this to at least encapsulate our stack traces from end users. -->
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/WEB-INF/jsp/common/exception.jsp</location>
    </error-page>

</web-app>