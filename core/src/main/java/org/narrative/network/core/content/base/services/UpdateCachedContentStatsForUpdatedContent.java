package org.narrative.network.core.content.base.services;

import org.narrative.network.core.area.user.services.NewLivePostTask;
import org.narrative.network.core.content.base.Content;
import org.narrative.network.core.system.NetworkRegistry;
import org.narrative.network.shared.tasktypes.GlobalTaskImpl;

/**
 * this method should only be called after the Content generated by
 * this ContentWrapper has been saved/updated since this method
 * relies on the OID of the Content.
 * Date: May 12, 2006
 * Time: 3:31:41 PM
 *
 * @author Brian
 */
public class UpdateCachedContentStatsForUpdatedContent extends GlobalTaskImpl<Object> {
    private final Content content;
    private final boolean isEdit;
    private final boolean wasContentLive;

    public UpdateCachedContentStatsForUpdatedContent(Content content, boolean isEdit, boolean wasContentLive) {
        this.content = content;
        this.isEdit = isEdit;
        this.wasContentLive = wasContentLive;
    }

    protected Object doMonitoredTask() {

        if (content.isContentLive() && !wasContentLive) {

            //update the stats if this is a new piece of content (non-edit)
            if (!isEdit) {
                // bl: don't add any point values when importing
                if (!NetworkRegistry.getInstance().isImporting()) {
                    getNetworkContext().doAreaTask(content.getArea(), new NewLivePostTask(content));
                }
            }
        }

        return null;
    }
}
